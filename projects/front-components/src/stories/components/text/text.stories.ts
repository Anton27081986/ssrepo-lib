import type { Meta, StoryObj } from '@storybook/angular';
import {
	Colors,
	TextType,
	TextWeight,
	Align,
} from '../../../lib/shared/models';
import { TextComponent } from '../../../lib/components';

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ü–≤–µ—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
const textColors = Object.entries(Colors)
	.filter(([name]) => name.toLowerCase().startsWith('text'))
	.map(([name, _]) => `- \`${name}\``)
	.join('\n');

const textColorsList = Object.entries(Colors)
	.filter(([name]) => name.toLowerCase().startsWith('text'))
	.map(([name, _]) => name);

const meta: Meta<TextComponent> = {
	title: 'Components/Text',
	component: TextComponent,
	tags: ['autodocs'],
	argTypes: {
		type: {
			control: 'select',
			options: Object.values(TextType),
			description: '–†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å —à—Ä–∏—Ñ—Ç–∞',
			table: {
				defaultValue: { summary: TextType.BodyMd },
			},
		},
		weight: {
			control: 'select',
			options: Object.values(TextWeight),
			description: '–¢–æ–ª—â–∏–Ω–∞ —à—Ä–∏—Ñ—Ç–∞',
			table: {
				defaultValue: { summary: TextWeight.Regular },
			},
		},
		color: {
			control: {
				type: 'select',
				labels: Object.fromEntries(
					Object.entries(Colors)
						.filter(([name]) =>
							name.toLowerCase().startsWith('text'),
						)
						.map(([name, value]) => [value, name]),
				),
			},
			options: Object.entries(Colors)
				.filter(([name]) => name.toLowerCase().startsWith('text')) // —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ –∂–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è options
				.map(([_, value]) => value), // –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤
			description: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
			table: {
				defaultValue: { summary: 'TextHeadings' },
			},
		},
		align: {
			control: 'select',
			options: Object.values(Align),
			description: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞',
			table: {
				defaultValue: { summary: Align.Start },
			},
		},
		lineClampCount: {
			control: { type: 'number', min: 1, max: 10 },
			description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è line-clamp',
			table: {
				defaultValue: { summary: '2' },
			},
		},
		isLineClamp: {
			control: 'boolean',
			description: '–û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Ç–µ–∫—Å—Ç–∞',
			table: {
				defaultValue: { summary: 'false' },
			},
		},
		isEllipsis: {
			control: 'boolean',
			description: '–î–æ–±–∞–≤–∏—Ç—å –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–∏',
			table: {
				defaultValue: { summary: 'false' },
			},
		},
		isUnderline: {
			control: 'boolean',
			description: '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ',
			table: {
				defaultValue: { summary: 'false' },
			},
		},
	},
	parameters: {
		docs: {
			description: {
				component: `
### –ö–æ–º–ø–æ–Ω–µ–Ω—Ç \`TextComponent\` (\`ss-lib-text\`)

–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ —Å—Ç–∏–ª—è–º–∏. –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä, —Ç–æ–ª—â–∏–Ω—É, —Ü–≤–µ—Ç, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∏ –¥—Ä—É–≥–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞.

---

#### üîπ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–µ–∫—Å—Ç–∞ (\`HeadingXs\` ‚Äì \`BodyXs\`)
- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è —Ç–æ–ª—â–∏–Ω–∞ —à—Ä–∏—Ñ—Ç–∞ (\`Regular\` ‚Äì \`Bold\`)
- –®–∏—Ä–æ–∫–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Ü–≤–µ—Ç–æ–≤
- –ì–∏–±–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
- –ú–Ω–æ–≥–æ—Ç–æ—á–∏–µ –ø—Ä–∏ –æ–±—Ä–µ–∑–∫–µ —Å—Ç—Ä–æ–∫
- –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞

---

#### üß© –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

\`\`\`html
<ss-lib-text
  [type]="TextType.BodyMd"
  [weight]="TextWeight.Regular"
  [color]="Colors.TextHeadings"
  [align]="Align.Start"
  [isLineClamp]="false"
  [isEllipsis]="false"
  [isUnderline]="false"
>
  –í–∞—à —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å
</ss-lib-text>
\`\`\`

---

#### üìè –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞

- \`HeadingXs\` ‚Äî –ó–∞–≥–æ–ª–æ–≤–æ–∫ Xs  
- \`BodyXl\`, \`BodyLg\`, \`BodyMd\`, \`BodySm\`, \`BodyXs\`

#### üî† –¢–æ–ª—â–∏–Ω–∞ —à—Ä–∏—Ñ—Ç–∞

- \`Regular\`  
- \`Medium\`  
- \`SemiBold\`  
- \`Bold\`

#### üé® –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞

${textColors}

#### üìê –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ

- \`Start\` ‚Äî –ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é  
- \`Center\` ‚Äî –ü–æ —Ü–µ–Ω—Ç—Ä—É  
- \`End\` ‚Äî –ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
        `,
			},
		},
	},
	args: {
		type: TextType.BodyMd,
		weight: TextWeight.Regular,
		color: Colors.TextHeadings,
		align: Align.Start,
		lineClampCount: 2,
		isLineClamp: false,
		isEllipsis: false,
		isUnderline: false,
	},
};

export default meta;

type Story = StoryObj<TextComponent>;

export const Default: Story = {
	args: {
		type: TextType.BodyMd,
		weight: TextWeight.Regular,
		color: Colors.TextHeadings,
		align: Align.Start,
	},
	render: (args) => ({
		props: args,
		template: `
			<ss-lib-text
				[type]="type"
				[weight]="weight"
				[color]="color"
				[align]="align"
				[lineClampCount]="lineClampCount"
				[isLineClamp]="isLineClamp"
				[isEllipsis]="isEllipsis"
				[isUnderline]="isUnderline"
			>
				–≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ —Å—Ç–∏–ª—è–º–∏. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä, —Ç–æ–ª—â–∏–Ω—É, —Ü–≤–µ—Ç –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞.
			</ss-lib-text>
		`,
	}),
};

// export const DifferentTypes: Story = {
// 	render: () => ({
// 		template: `
// 			<div style="display: flex; flex-direction: column; gap: 16px;">
// 				<ss-lib-text [type]="TextType.HeadingXs">Xs –ó–∞–≥–æ–ª–æ–≤–æ–∫</ss-lib-text>
// 				<ss-lib-text [type]="TextType.BodyXl">Xl —Ç–µ–∫—Å—Ç</ss-lib-text>
// 				<ss-lib-text [type]="TextType.BodyLg">Lg —Ç–µ–∫—Å—Ç</ss-lib-text>
// 				<ss-lib-text [type]="TextType.BodyMd">Md —Ç–µ–∫—Å—Ç</ss-lib-text>
// 				<ss-lib-text [type]="TextType.BodySm">Sm —Ç–µ–∫—Å—Ç</ss-lib-text>
// 				<ss-lib-text [type]="TextType.BodySm">Xs —Ç–µ–∫—Å—Ç</ss-lib-text>
// 			</div>
// 		`,
// 		props: {
// 			TextType,
// 		},
// 	}),
// };

export const DifferentTypes: Story = {
	name: '–†–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞',
	args: {
		type: TextType.BodyMd,
		color: Colors.TextHeadings, // –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–∞ —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
	},
	render: (args) => ({
		props: args,
		template: `
      <div style="display: flex; flex-direction: column; gap: 16px;">
        <ss-lib-text [type]="type"  [color]="color">Xs –ó–∞–≥–æ–ª–æ–≤–æ–∫</ss-lib-text>
        <ss-lib-text [type]="type"  [color]="color">Xl —Ç–µ–∫—Å—Ç</ss-lib-text>
        <ss-lib-text [type]="type" [color]="color">Lg —Ç–µ–∫—Å—Ç</ss-lib-text>
        <ss-lib-text [type]="type" [color]="color">Md —Ç–µ–∫—Å—Ç</ss-lib-text>
        <ss-lib-text [type]="type" [color]="color">Sm —Ç–µ–∫—Å—Ç</ss-lib-text>
        <ss-lib-text [type]="type" [color]="color">Xs —Ç–µ–∫—Å—Ç</ss-lib-text>
      </div>
    `,
	}),
};

export const DifferentWeights: Story = {
	render: () => ({
		template: `
			<div style="display: flex; flex-direction: column; gap: 16px;">
				<ss-lib-text [weight]="TextWeight.Regular">Regular —Ç–µ–∫—Å—Ç</ss-lib-text>
				<ss-lib-text [weight]="TextWeight.Medium">Medium —Ç–µ–∫—Å—Ç</ss-lib-text>
				<ss-lib-text [weight]="TextWeight.Semibold">SemiBold —Ç–µ–∫—Å—Ç</ss-lib-text>
				<ss-lib-text [weight]="TextWeight.Bold">Bold —Ç–µ–∫—Å—Ç</ss-lib-text>
			</div>
		`,
		props: {
			TextWeight,
		},
	}),
};

export const DifferentColors: Story = {
	render: () => ({
		template: `
			<div style="display: flex; flex-direction: column; gap: 16px;">
				
			    @for (colorToken of textColorsList; track $index) {
			    	<ss-lib-text [color]="Colors[colorToken]">
						–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º —Ü–≤–µ—Ç–∞: {{colorToken}}
					</ss-lib-text>
			    }
			</div>
		`,
		props: {
			Colors,
			textColorsList,
		},
	}),
};

export const DifferentAlignments: Story = {
	render: () => ({
		template: `
			<div style="display: flex; flex-direction: column; gap: 16px;">
				<ss-lib-text [align]="Align.Start">–¢–µ–∫—Å—Ç –≤—ã—Ä–æ–≤–Ω–µ–Ω –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é</ss-lib-text>
				<ss-lib-text [align]="Align.Center">–¢–µ–∫—Å—Ç –≤—ã—Ä–æ–≤–Ω–µ–Ω –ø–æ —Ü–µ–Ω—Ç—Ä—É</ss-lib-text>
				<ss-lib-text [align]="Align.End">–¢–µ–∫—Å—Ç –≤—ã—Ä–æ–≤–Ω–µ–Ω –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é</ss-lib-text>
			</div>
		`,
		props: {
			Align,
		},
	}),
};

export const WithLineClamp: Story = {
	args: {
		isLineClamp: true,
		lineClampCount: 2,
	},
	render: (args) => ({
		props: args,
		template: `
			<div style="width: 300px;">
				<ss-lib-text
					[isLineClamp]="isLineClamp"
					[lineClampCount]="lineClampCount"
				>
					–≠—Ç–æ –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫. 
					–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Å –ø–æ–º–æ—â—å—é –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ lineClampCount.
					–≠—Ç–æ –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫. 
					–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Å –ø–æ–º–æ—â—å—é –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ lineClampCount.
				</ss-lib-text>
			</div>
		`,
	}),
};

export const WithEllipsis: Story = {
	args: {
		isEllipsis: true,
	},
	render: (args) => ({
		props: args,
		template: `
			<div style="width: 300px;">
				<ss-lib-text [isEllipsis]="isEllipsis">
					–≠—Ç–æ –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω —Å –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ–º –≤ –∫–æ–Ω—Ü–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
				</ss-lib-text>
			</div>
		`,
	}),
};

export const WithUnderline: Story = {
	args: {
		isUnderline: true,
	},
	render: (args) => ({
		props: args,
		template: `
			<ss-lib-text [isUnderline]="isUnderline">
				–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç
			</ss-lib-text>
		`,
	}),
};
